import { formatAmount, formatPercent, toAmount } from "./format"

test("formatAmount", () => {
  expect(formatAmount("1234567890")).toBe("1,234.56789")
  expect(formatAmount("1234567890", { decimals: 7 })).toBe("123.456789")
  expect(formatAmount("1234567890", { decimals: 0 })).toBe("1,234,567,890")
  expect(formatAmount("1234567890", { fixed: 6 })).toBe("1,234.567890")
  expect(formatAmount("1234567890", { fixed: 0 })).toBe("1,234")
  expect(formatAmount("1234567890", { fixed: false })).toBe("1,234.56789")
  expect(formatAmount("1234567890", { comma: true })).toBe("1,234.56789")
  expect(formatAmount("1234567890", { comma: false })).toBe("1234.56789")
  expect(formatAmount("1234567890", { integer: true })).toBe("1,234")
  expect(formatAmount("1234567890", { integer: false })).toBe("1,234.56789")
  expect(formatAmount("1234567890", { suffix: true })).toBe("1.23K")
  expect(formatAmount("1234567890", { suffix: true, fixed: 1 })).toBe("1.2K")
  expect(formatAmount("1234567890", { suffix: true, integer: true })).toBe("1K")
  expect(formatAmount("1234567890", { suffix: false })).toBe("1,234.56789")
  expect(formatAmount("1234567890", { comma: true, fixed: 2 })).toBe("1,234.56")
  expect(formatAmount("1", { decimals: 7 })).toBe("0.0000001")
  expect(formatAmount("0", { decimals: undefined })).toBe("0")
  expect(formatAmount("")).toBe("0")
  expect(formatAmount("NaN")).toBe("0")
  expect(formatAmount(undefined)).toBe("0")
})

test("toAmount", () => {
  expect(toAmount("1234.56789")).toBe("1234567890")
  expect(toAmount("1234", 0)).toBe("1234")
  expect(toAmount("")).toBe("0")
  expect(toAmount("NaN")).toBe("0")
  expect(toAmount(undefined)).toBe("0")
})

test("formatPercent", () => {
  expect(formatPercent("1.23")).toBe("123.00%")
  expect(formatPercent("1.23", 3)).toBe("123.000%")
  expect(formatPercent("1.23", 0)).toBe("123%")
  expect(formatPercent("1.234567")).toBe("123.46%")
  expect(formatPercent("1.234567", 3)).toBe("123.457%")
  expect(formatPercent("1.234567", 0)).toBe("123%")
  expect(formatPercent("")).toBe("0%")
  expect(formatPercent("NaN")).toBe("0%")
  expect(formatPercent(undefined)).toBe("0%")
})
